# Имя
name: Release Build

# Триггер 
on:
  push:
    tags:
      - 'v*'

jobs:
  
  build:
    runs-on: windows-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

    # Install the .NET Core workload
      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'
        
    # Execute all unit tests in the solution
    #- name: Execute unit tests
    #  run: dotnet test

    # Restore the application to populate the obj folder with RuntimeIdentifiers
      - name: Restore the application
        run: dotnet restore


      - name: Build poject
        run: dotnet build --configuration Release --no-restore
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: lines-counter
          path: ./publish

  release:
    runs-on: windows-latest

    steps:
      - name: Creare Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }} # Название релиза
          body: "Автоматически созданный релиз для версии ${{ github.ref }}"
          draft: false # Релиз будет сразу опубликован
          prerelease: false # Это не предрелизная версия
      # Шаг 2: Прикрепление артефактов к релизу
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./publish # Путь до артефактов
          asset_name: my-project.zip # Название файла
          asset_content_type: application/zip
      # Шаг 3: Упаковка артефактов в zip файл
      - name: Zip build artifacts
        run: zip -r my-project.zip ./publish
      
